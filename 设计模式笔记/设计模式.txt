// ==========================================================================
// === 状态模式
// ==========================================================================
	状态模式(State)，当一个对象的内在状态改变时允许改变其行为，这个对象看起来像是改变了其类。
	状态模式主要解决的是当控制一个对象状态变换的条件表达式过于复杂时的情况。把状态的判断逻辑转移到表示不同状态的一系列类当中，可以把复杂的判断逻辑简化。
	
	当一个对象的行为取决于它的状态，并且它必须在运行时刻根据状态改变它的行为时，就可以考虑使用状态模式了。
	
// ==========================================================================
// === 适配器模式
// ==========================================================================
	适配器模式(Adapter)，将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。
	系统的数据和行为都正确，但接口不符时，我们应该考虑使用适配器，目的是使控制范围之外的一个原有对象与某个接口匹配。适配器模式主要应用于希望复用一些现存的类，但是接口又与复用环境要求不一致的情况。
	
	在双方都不太容易修改的时候再使用适配器模式适配
	
// ==========================================================================
// === 备忘录模式
// ==========================================================================

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	